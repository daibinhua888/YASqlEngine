//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.4
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\z\Documents\Visual Studio 2017\Projects\YASqlEngine\YASqlEngine\Grammars\SelectSQL.g4 by ANTLR 4.6.4

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace YASqlEngine {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="SelectSQLParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.4")]
[System.CLSCompliant(false)]
public interface ISelectSQLListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="SelectSQLParser.compileUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompileUnit([NotNull] SelectSQLParser.CompileUnitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelectSQLParser.compileUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompileUnit([NotNull] SelectSQLParser.CompileUnitContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SelectSQLParser.sql"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSql([NotNull] SelectSQLParser.SqlContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelectSQLParser.sql"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSql([NotNull] SelectSQLParser.SqlContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SelectSQLParser.select"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelect([NotNull] SelectSQLParser.SelectContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelectSQLParser.select"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelect([NotNull] SelectSQLParser.SelectContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SelectSQLParser.columns"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterColumns([NotNull] SelectSQLParser.ColumnsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelectSQLParser.columns"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitColumns([NotNull] SelectSQLParser.ColumnsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SelectSQLParser.column"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterColumn([NotNull] SelectSQLParser.ColumnContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelectSQLParser.column"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitColumn([NotNull] SelectSQLParser.ColumnContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SelectSQLParser.columnExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterColumnExpression([NotNull] SelectSQLParser.ColumnExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelectSQLParser.columnExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitColumnExpression([NotNull] SelectSQLParser.ColumnExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SelectSQLParser.functionableColumn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionableColumn([NotNull] SelectSQLParser.FunctionableColumnContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelectSQLParser.functionableColumn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionableColumn([NotNull] SelectSQLParser.FunctionableColumnContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SelectSQLParser.columnName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterColumnName([NotNull] SelectSQLParser.ColumnNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelectSQLParser.columnName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitColumnName([NotNull] SelectSQLParser.ColumnNameContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SelectSQLParser.from"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFrom([NotNull] SelectSQLParser.FromContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelectSQLParser.from"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFrom([NotNull] SelectSQLParser.FromContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SelectSQLParser.tableLockType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTableLockType([NotNull] SelectSQLParser.TableLockTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelectSQLParser.tableLockType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTableLockType([NotNull] SelectSQLParser.TableLockTypeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SelectSQLParser.table"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTable([NotNull] SelectSQLParser.TableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelectSQLParser.table"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTable([NotNull] SelectSQLParser.TableContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SelectSQLParser.where"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhere([NotNull] SelectSQLParser.WhereContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelectSQLParser.where"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhere([NotNull] SelectSQLParser.WhereContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SelectSQLParser.orderby"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOrderby([NotNull] SelectSQLParser.OrderbyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelectSQLParser.orderby"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOrderby([NotNull] SelectSQLParser.OrderbyContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SelectSQLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] SelectSQLParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelectSQLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] SelectSQLParser.ExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SelectSQLParser.identity"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentity([NotNull] SelectSQLParser.IdentityContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelectSQLParser.identity"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentity([NotNull] SelectSQLParser.IdentityContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SelectSQLParser.character"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCharacter([NotNull] SelectSQLParser.CharacterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelectSQLParser.character"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCharacter([NotNull] SelectSQLParser.CharacterContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SelectSQLParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumber([NotNull] SelectSQLParser.NumberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelectSQLParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumber([NotNull] SelectSQLParser.NumberContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SelectSQLParser.string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterString([NotNull] SelectSQLParser.StringContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelectSQLParser.string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitString([NotNull] SelectSQLParser.StringContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SelectSQLParser.orderByStmts"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOrderByStmts([NotNull] SelectSQLParser.OrderByStmtsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelectSQLParser.orderByStmts"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOrderByStmts([NotNull] SelectSQLParser.OrderByStmtsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SelectSQLParser.orderByStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOrderByStmt([NotNull] SelectSQLParser.OrderByStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelectSQLParser.orderByStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOrderByStmt([NotNull] SelectSQLParser.OrderByStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SelectSQLParser.orderByDirection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOrderByDirection([NotNull] SelectSQLParser.OrderByDirectionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelectSQLParser.orderByDirection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOrderByDirection([NotNull] SelectSQLParser.OrderByDirectionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SelectSQLParser.whereStmts"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhereStmts([NotNull] SelectSQLParser.WhereStmtsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelectSQLParser.whereStmts"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhereStmts([NotNull] SelectSQLParser.WhereStmtsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SelectSQLParser.whereStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhereStmt([NotNull] SelectSQLParser.WhereStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelectSQLParser.whereStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhereStmt([NotNull] SelectSQLParser.WhereStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SelectSQLParser.whereCondition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhereCondition([NotNull] SelectSQLParser.WhereConditionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelectSQLParser.whereCondition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhereCondition([NotNull] SelectSQLParser.WhereConditionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SelectSQLParser.operators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperators([NotNull] SelectSQLParser.OperatorsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelectSQLParser.operators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperators([NotNull] SelectSQLParser.OperatorsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SelectSQLParser.comparableValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparableValue([NotNull] SelectSQLParser.ComparableValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelectSQLParser.comparableValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparableValue([NotNull] SelectSQLParser.ComparableValueContext context);
}
} // namespace YASqlEngine
